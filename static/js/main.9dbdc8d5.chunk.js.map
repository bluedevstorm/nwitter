{"version":3,"sources":["fbase.js","routes/Profile.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","userObj","refreshUser","useState","displayName","newDisplayName","setNewDisplayName","hostory","useHistory","getMyProfile","a","collection","where","uid","orderBy","get","nweets","console","log","docs","map","doc","data","useEffect","onSubmit","event","preventDefault","updateProfile","type","placeholder","value","onChange","target","name","onClick","signOut","push","AuthForm","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","required","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","id","delete","refFromURL","attachmentUrl","toggleEditing","update","src","width","height","NweetFactory","nweet","setNweet","attachment","setAttachment","fileRef","ref","child","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","add","maxLength","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","Home","setNweets","onSnapshot","snapshot","nweetAry","Navigation","to","AppRouter","isLoggedIn","exact","path","Profile","from","App","init","setInit","setIsLoggedIn","setUserObj","onAuthStateChanged","user","args","currentUser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9dbdc8d5.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();","import React from 'react';\nimport { authService } from 'fbase';\nimport { useHistory } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport { dbService } from 'fbase';\nimport { useState } from 'react';\n\nexport default ({ userObj, refreshUser }) =>  {\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n  const hostory = useHistory();\n  const onLogoutClick = () => {\n    authService.signOut();\n    hostory.push(\"/\");\n  }\n  const getMyProfile = async () => {\n    const nweets = await dbService.\n      collection(\"nweets\").\n      where(\"creatorId\", \"==\", userObj.uid).\n      orderBy(\"createdAt\").\n      get();\n    console.log(nweets.docs.map((doc) => doc.data()));\n  }\n\n  useEffect(() => {\n    getMyProfile();\n  }, []);\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({\n        displayName: newDisplayName\n      });\n      refreshUser();\n    }\n  }\n\n  const onChange = (event) => {\n    const { target: { name, value } } = event;\n    setNewDisplayName(value);\n  }\n\n  return (\n    <>\n      <form onSubmit={onSubmit}>\n        <input type=\"text\" placeholder=\"Display Name\" value={newDisplayName} onChange={onChange} />\n        <input type=\"submit\" value=\"Update Profile\" />\n      </form>\n      <button onClick={onLogoutClick}>Log out</button>\n    </>\n  )\n}","import React, { useState } from 'react';\nimport { authService } from 'fbase';\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  const onChange = (event) => {\n    const { target: { name, value } } = event;\n    if (name === 'email') {\n      setEmail(value);\n    } else if (name === 'password') {\n      setPassword(value);\n    }\n  }\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    let data;\n    try {\n      if (newAccount) {\n        data = await authService.createUserWithEmailAndPassword(email, password);\n      } else {\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n      console.log(data); \n    } catch (error) {\n      console.log(error.message);\n      setError(error.message);\n    }\n  }\n  const toggleAccount = () => setNewAccount(prev => !prev);\n  return (\n    <>\n      <form onSubmit={onSubmit}>\n        <input name=\"email\" type=\"text\" placeholder=\"Email\" required value={email} onChange={onChange}/>\n        <input name=\"password\" type=\"password\" placeholder=\"Password\" required value={password} onChange={onChange}/>\n        <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Sign In\"} />\n        {error}\n      </form>\n      <span onClick={toggleAccount}>{newAccount ? \"Sign In\" : \"Create Account\"}</span>\n    </>\n  )\n}\n\nexport default AuthForm;\n","import React from 'react';\nimport { authService } from 'fbase';\nimport { firebaseInstance } from '../fbase';\nimport AuthForm from 'components/AuthForm';\n\nconst Auth = () => {\n  const onSocialClick = async (event) => {\n    const { target: { name, value } } = event;\n    let provider;\n    try {\n      if (name === 'google') {\n        provider = new firebaseInstance.auth.GoogleAuthProvider();\n      } else if (name === 'github') {\n        provider = new firebaseInstance.auth.GithubAuthProvider();\n      }\n      const data = await authService.signInWithPopup(provider);\n      console.log(data);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  return (\n    <div>\n      <AuthForm />\n      <div>\n        <button name=\"google\" onClick={onSocialClick}>Continue with Goolge</button>\n        <button name=\"github\" onClick={onSocialClick}>Continue with Github</button>\n      </div>\n    </div>\n  )\n}\n\nexport default Auth;","import { dbService, storageService } from \"fbase\";\nimport React, { useState } from \"react\";\n\nconst Nweet = ({ nweetObj, isOwner })  => {\n  const [editing, setEditing] = useState(false);\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"진짜 지울거임?\");\n    if (ok) {\n      // delete\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\n      await storageService.refFromURL(nweetObj.attachmentUrl).delete();\n    } else {\n      // cancel\n    }\n  }\n  const toggleEditing = () => setEditing((prev) => !prev);\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await dbService.doc(`nweets/${nweetObj.id}`).update({\n      text: newNweet,\n    });\n    setEditing(false);\n  }\n  const onChange = (event) => {\n    const { target: { value } } = event;\n    setNewNweet(value);\n    console.log('onChange', value);\n  }\n  return (\n    <div>\n      {(isOwner && editing) ? (\n        <>\n          <form onSubmit={onSubmit}>\n            <input value={newNweet} placeholder=\"수정하기\" required onChange={onChange} />\n            <input type=\"submit\" value=\"Update Nweet\"/>\n          </form>\n          <button onClick={toggleEditing}>Cancel</button>\n        </>\n      ) : (\n        <>\n          <h4>{nweetObj.text}</h4>\n          {nweetObj.attachmentUrl && (\n            <img src={nweetObj.attachmentUrl}width=\"50px\" height=\"50px\" />\n          )}\n          {isOwner && (\n            <>\n              <button onClick={onDeleteClick}>Delete Nweet</button>\n              <button onClick={toggleEditing}>Edit Nweet</button>\n            </>\n          )}\n        </>\n      )}\n    </div>\n  )\n}\n\nexport default Nweet;\n","import React, { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { dbService, storageService } from 'fbase';\n\nconst NweetFactory = ({ userObj }) => {\n  const [nweet, setNweet] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    let attachmentUrl = \"\";\n    if (attachment != \"\") {\n      const fileRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\n      const response = await fileRef.putString(attachment, \"data_url\");\n      attachmentUrl = await response.ref.getDownloadURL();\n    }\n    const newNweet = {\n      text: nweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl,\n    }\n    await dbService.collection(\"nweets\").add(newNweet);\n    setNweet(\"\");\n    setAttachment(\"\");\n  }\n  const onChange = (event) => {\n    const { target: { name, value } } = event;\n    setNweet(value);\n  }\n  const onFileChange = (event) => {\n    const { target: { files } } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      console.log(finishedEvent);\n      const { currentTarget: { result } } = finishedEvent;\n      setAttachment(result);\n    }\n    reader.readAsDataURL(theFile);\n  }\n  const onClearAttachment = () => {\n    setAttachment(null);\n  }\n  return (\n    <form onSubmit={onSubmit}>\n      <input value={nweet} onChange={onChange} type=\"text\" placeholder=\"What's on your mind?\" maxLength={120} />\n      <input type=\"file\" accept=\"image/*\" onChange={onFileChange} />\n      <input type=\"submit\" value=\"Nweet\"  />\n      {attachment && (\n        <div>\n          <img src={attachment} width=\"50px\" height=\"50px\"/>\n          <button onClick={onClearAttachment}>Clear</button>\n        </div>\n      )}\n    </form>\n  );\n}\n\nexport default NweetFactory;\n","import React from 'react';\nimport { useState } from 'react';\nimport { dbService, storageService } from '../fbase';\nimport { useEffect } from 'react';\nimport Nweet from 'components/Nweet';\nimport NweetFactory from 'components/NweetFactory';\n\nconst Home = ({ userObj }) => {\n  const [nweets, setNweets] = useState([]);\n\n  useEffect(() => {\n    dbService.collection(\"nweets\").onSnapshot((snapshot) => {\n      const nweetAry = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setNweets(nweetAry);\n    })\n  }, []);\n\n  return (\n    <div>\n      <NweetFactory userObj={userObj} />\n      <div>\n        {nweets.map(nweet => <Nweet key={nweet.id} nweetObj={nweet} isOwner={nweet.creatorId === userObj.uid}/>)}\n      </div>\n    </div>\n  )\n}\n\nexport default Home;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Navigation = ({ userObj }) => <nav>\n  <ul>\n    <li>\n      <Link to=\"/\">Home</Link>\n    </li>\n    <li>\n      <Link to=\"/profile\">{userObj.displayName}의 Profile</Link>\n    </li>\n  </ul>\n</nav>\nexport default Navigation;","import React, { useState } from \"react\";\nimport { HashRouter as Router, Redirect, Route, Switch } from \"react-router-dom\";\nimport Profile from \"routes/Profile\";\nimport Auth from \"routes/Auth\";\nimport Home from 'routes/Home';\nimport Navigation from \"components/Navigation\";\n\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        {isLoggedIn ? (\n          <>\n            <Route exact path=\"/\">\n              <Home userObj={userObj} />\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile userObj={userObj} refreshUser={refreshUser} />\n            </Route>\n            <Redirect from=\"*\" to=\"/\" />\n          </>\n        ) : (\n          <Route exact path=\"/\">\n            <Auth />\n          </Route>\n        )}\n      </Switch>\n    </Router>\n  )\n}\n\nexport default AppRouter;","import { useEffect, useState } from \"react\";\nimport AppRouter from \"./Router\";\nimport { authService } from 'fbase';\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setIsLoggedIn(true);\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args)\n        });\n      } else {\n        setIsLoggedIn(false);\n        setUserObj(null);\n      }\n      setInit(true);\n    })\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: user.updateProfile,\n    });\n  }\n  return (\n    <>\n      {init ?  <AppRouter refreshUser={refreshUser} isLoggedIn={isLoggedIn} userObj={userObj} /> : \"Loading...\"}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}